services:
  db:
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  backend:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env
    ports:
      - "8000:8000"

  worker:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A app.worker worker --loglevel=info
    env_file:
      - .env

  beat:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: celery -A app.worker beat --loglevel=info
    env_file:
      - .env

volumes:
  pgdata:
    name: pgdata
    driver: local